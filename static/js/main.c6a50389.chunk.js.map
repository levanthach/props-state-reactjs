{"version":3,"sources":["Components/TopMenu/topMenu.js","Components/Header/Header.js","Components/Content/Content.js","Components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["TopMenu","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","Header","Content","props","renderForm","ref","updateData","medial","name","defaultValue","title","onClick","editSave","renderButton","editClick","displayCheck","state","status","setState","console","log","value","this","location1","src","srcimg","alt","location2","description","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c6a50389.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TopMenu extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark navbar-custom fixed-top\">\r\n            <div className=\"container\">\r\n              <a className=\"navbar-brand\" href=\"/#\">Start Bootstrap</a>\r\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\" />\r\n              </button>\r\n              <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"/#\">Sign Up</a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"/#\">Log In</a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopMenu;","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"masthead text-center text-white\">\r\n        <div className=\"masthead-content\">\r\n          <div className=\"container\">\r\n            <h1 className=\"masthead-heading mb-0\">One Page Wonder</h1>\r\n            <h2 className=\"masthead-subheading mb-0\">Will Rock Your Socks Off</h2>\r\n            <a href=\"# \" className=\"btn btn-primary btn-xl rounded-pill mt-5\">Learn More</a>\r\n          </div>\r\n        </div>\r\n        <div className=\"bg-circle-1 bg-circle\" />\r\n        <div className=\"bg-circle-2 bg-circle\" />\r\n        <div className=\"bg-circle-3 bg-circle\" />\r\n        <div className=\"bg-circle-4 bg-circle\" />\r\n      </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Content extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            status: 0\r\n        }\r\n    }\r\n\r\n    renderForm = () => {\r\n        return(\r\n            <div className=\"row\">\r\n            <div className=\"form-group\">\r\n              <input type=\"text\"\r\n                className=\"form-control\" ref={(updateData) =>{ this.medial = updateData }} name=\"name\" defaultValue={this.props.title}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"btn btn-success\" onClick={() => this.editSave()}>Save</div>\r\n            </div>\r\n          </div>\r\n\r\n        );\r\n    }\r\n    \r\n    renderButton = () => {\r\n        return (\r\n        <div className=\"row\">\r\n            <div className=\"btn btn-group\">\r\n                <div className=\"btn btn-info\" onClick={() => this.editClick()}>Edit</div>\r\n            </div>\r\n         </div>\r\n        );\r\n    }\r\n\r\n    displayCheck = () => {\r\n        if(this.state.status === 0){\r\n            return this.renderButton();\r\n        }\r\n        else {\r\n            return this.renderForm();\r\n        }\r\n    }\r\n\r\n    editSave = () => {\r\n        this.setState({status:0});\r\n        console.log(this.medial.value);\r\n        \r\n    }\r\n\r\n    editClick = () => {\r\n        this.setState({status:1});\r\n    }\r\n    render(props) {\r\n        return (\r\n            <section>\r\n                 <div className=\"row align-items-center\">\r\n            <div className=\"container\">\r\n                <div className={\"col-lg-6 \" + this.props.location1}>\r\n                  <div className=\"p-5\">\r\n                    <img className=\"img-fluid rounded-circle\" src={this.props.srcimg} alt=\"\" />\r\n                  </div>\r\n                </div>\r\n                <div className={\"col-lg-6 \" + this.props.location2}>\r\n                  <div className=\"p-5\">\r\n                        <h2 className=\"display-4\">{this.props.title}</h2>\r\n                        <p>{this.props.description}</p>\r\n                  </div>\r\n                  {this.displayCheck()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <footer className=\"py-5 bg-black\">\r\n            <div className=\"container\">\r\n              <p className=\"m-0 text-center text-white small\">Copyright Â© Your Website 2019</p>\r\n            </div>\r\n          </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport TopMenu from './Components/TopMenu/topMenu';\nimport Header from './Components/Header/Header';\nimport Content from './Components/Content/Content';\nimport Footer from './Components/Footer/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <TopMenu/>\n        <Header/>\n      <Content title=\"Bai biet so 1\" description=\"sagffffffffffffffffffffffadsfadgsdgbdvbfag\" location1=\"order-lg-1\" location2=\"order-lg-2\" srcimg=\"img/03.jpg\"/>\n        <Content title=\"Bai biet so 2\" description=\"ssdgsddsagfasgsadgasfgasfgadsgsdgbteytreht\" location1=\"order-lg-2\" location2=\"order-lg-1\" srcimg=\"img/02.jpg\"/>\n        <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}